apply plugin: 'com.android.application'

android {
    def apkPrefix = "ChildrenTV"

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 47
        versionName "47"

        multiDexEnabled = true
    }

    signingConfigs {
        release {
            storeFile android.signingConfigs.debug.storeFile
            storePassword android.signingConfigs.debug.storePassword
            keyAlias android.signingConfigs.debug.keyAlias
            keyPassword android.signingConfigs.debug.keyPassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    /**
     * rename the apk with version name e.g. ChildrenTV-47.apk
     */
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName = apkPrefix + "-" + output.outputFile.name.replace(".apk", "-${variant.versionCode}.apk");
            output.outputFile = new File(output.outputFile.parent, newName)
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //testCompile 'junit:junit:4.12'

    /**
     * import org.apache.http.client.entity.UrlEncodedFormEntity;
     * import org.apache.http.client.methods.HttpPost;
     * Tried to replace httpclient-4.5.jar, but no luck
     */
    //compile 'org.apache.httpcomponents:httpclient:4.5.2'
    //compile 'org.apache.httpcomponents:httpcore:4.4.4'
    //compile 'org.apache.httpcomponents:httpclient:4.0-beta1'

    /**
     * import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;
     */
    compile 'com.j256.ormlite:ormlite-android:4.48'

    /**
     * import com.google.appengine.repackaged.org.apache.commons.httpclient.HttpClient;
     */
    compile 'com.google.appengine:appengine-remote-api:1.9.37'

    /**
     * @DatabaseTable ,
     * @DatabaseField
     */
    compile 'com.j256.ormlite:ormlite-core:4.48'

    compile 'oauth.signpost:signpost-commonshttp4:1.2.1.2' //oauth.signpost.commonshttp

    /**
     * With Google Cloud Endpoints and Chromecast lib we hit dex limit of 65K classes
     * http://developer.android.com/tools/building/multidex.html
     */
    compile 'com.android.support:multidex:1.0.1'

    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile 'com.nineoldandroids:library:2.4.0'

    /**
     *  logging
     */
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-android:1.7.12'

    /**
     *    WARNING: Dependency org.apache.httpcomponents:httpclient:4.5.2 is ignored
     *    for debug as it may be conflicting with the internal version provided by Android.
     */

    //compile 'com.google.apis:google-api-services-drive:v2-rev170-1.20.0'

    /**
     *  Required to display left and right sliding menu (consider to substitute with default android navigation drawer)
     *  https://github.com/UkiDLucas/CastCompanionLibrary-android
     */
    compile project(':CastCompanionLibrary-android')

    compile project(':SlidingMenu')

    /**
     * required for tutorial screen
     */
    compile project(':ViewPagerIndicator')
}

task initReleaseConfig << {

    def propertiesFile = "signing_prod.properties"

    if (project.hasProperty("configFile")) {
        propertiesFile = configFile
    }

    Properties props = new Properties()
    props.load(new FileInputStream(file(propertiesFile)))

    if (props.containsKey("storeFile") && props.storeFile?.trim()) {
        android.signingConfigs.release.storeFile = file(props.storeFile)
    } else if (System.console() != null) {
        android.signingConfigs.release.storeFile = file(System.console().readLine("\n\$ Enter keystore path: "))
    }

    if (props.containsKey("storePassword") && props.storePassword?.trim()) {
        android.signingConfigs.release.storePassword = props.storePassword
    } else if (System.console() != null) {
        android.signingConfigs.release.storePassword = new String(System.console().readPassword("\n\$ Enter keystore password: "))
    }

    if (props.containsKey("keyAlias") && props.keyAlias?.trim()) {
        android.signingConfigs.release.keyAlias = props.keyAlias
    } else if (System.console() != null) {
        android.signingConfigs.release.keyAlias = System.console().readLine("\n\$ Enter key alias: ")
    }

    if (props.containsKey("keyPassword") && props.keyPassword?.trim()) {
        android.signingConfigs.release.keyPassword = props.keyPassword
    } else if (System.console() != null) {
        android.signingConfigs.release.keyPassword = new String(System.console().readPassword("\n\$ Enter key password: "))
    }
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "initReleaseConfig"
    }
}
